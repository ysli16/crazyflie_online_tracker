function CL_sys = get_CL_model(g)
% The function creates a linearized closed-loop system of the onboard controller and
% crazyflie dynamics.

    %Get the linearised model of the onboard controller
    [Ac,Bc,Cc,Dc] = linmod('controller');
    
    K_sys = ss(Ac,Bc,Cc,Dc);
    
    % Define the linearised model of the crazyflie
    % Specify that the input dimension is four, denoted "nu", this
    % corresponds to the total thrust and the angular rates about the
    % (x,y,z) axes of the body frame.
    nu = 4;

    % Specify that the state dimension for the outer loop, denoted "nx"
    nx = 9;
    %specify the mass of the crazyflie
    m = 0.029;
    % State transition matrix:
    Ag  =  [...
            0 0 0   1 0 0   0 0 0   ;...
            0 0 0   0 1 0   0 0 0   ;...
            0 0 0   0 0 1   0 0 0   ;...
                                             ...
            0 0 0   0 0 0   0 g 0   ;...
            0 0 0   0 0 0  -g 0 0   ;...
            0 0 0   0 0 0   0 0 0   ;...
                                             ...
            0 0 0   0 0 0   0 0 0   ;...
            0 0 0   0 0 0   0 0 0   ;...
            0 0 0   0 0 0   0 0 0   ;...
        ];



    % Input matrix:
    Bg  =  [...
            zeros(1,nu)         ;...
            zeros(1,nu)         ;...
            zeros(1,nu)         ;...
                                 ...
            zeros(1,nu)         ;...
            zeros(1,nu)         ;...
            [1/m,zeros(1,nu-1)]    ;...
                                 ...
            [0,1,0,0]           ;...
            [0,0,1,0]           ;...
            [0,0,0,1]           ;...
        ];
    
    % Output matrix
    Cg = eye(nx);

    % The feed-through matrix
    Dg = zeros(nx,nu);
    
    G_sys = ss(Ag,Bg,Cg,Dg);
    
    %OL_sys = series(K_sys,G_sys);
    
    K_sys.InputName = 'e';  
    K_sys.OutputName = 'u';
    
    G_sys.InputName = 'u';  
    G_sys.OutputName = 'y';
    
    Sum = sumblk('e = r-y',9);
    
    % formulate the closed loop system.(Such closed loop system assumes the 
    % on-board low level controller tracks the attitude rate commands 
    % immediately and perfectly.)
    CL_sys = connect(G_sys,K_sys,Sum,'r','y');
end
